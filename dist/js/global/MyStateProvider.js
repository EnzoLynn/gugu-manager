myStates={infaxgridState:{},infaxgridFilter:{},outfaxgridState:{},outfaxgridFilter:{},succoutfaxgridState:{},succoutfaxgridFilter:{},draftgridState:{},addressgridState:{},docgridState:{},docgridFilter:{},taskgridState:{},taskgridFilter:{},wfrulegridState:{},smsinfaxgridState:{},smsinfaxgridFilter:{},smsoutfaxgridState:{},smsoutfaxgridFilter:{},westPanelState:{},centerPanelState:{},centerCenterPanelState:{},centerSouthPanelState:{},southPanelState:{},printerSrc:{},printerType:{},faxtoolBtn:{},currtree:{},searchState:{},smscbState:{}};var setSerStates=new Ext.util.DelayedTask,stateSorArr=["infaxgridState","infaxgridFilter","outfaxgridState","outfaxgridFilter","succoutfaxgridState","succoutfaxgridFilter","draftgridState","addressgridState","docgridState","docgridFilter","taskgridState","taskgridFilter","wfrulegridState","smsinfaxgridState","smsinfaxgridFilter","smsoutfaxgridState","smsoutfaxgridFilter","westPanelState","centerPanelState","centerCenterPanelState","centerSouthPanelState","southPanelState","printerSrc","printerType","faxtoolBtn","currtree","searchState","smscbState"];Ext.define("WS.lib.MyStateProvider",{extend:"Ext.state.Provider",constructor:function(config){var me=this;config=config||{},Ext.isDefined(config.sessiontoken)&&(me.sessiontoken=config.sessiontoken),me.callParent(arguments),me.state=me.readMyStates()},set:function(name,value){var me=this;return"undefined"==typeof value||null===value?void me.clear(name):(me.setServerState(name,value),void me.callParent(arguments))},clear:function(name){this.clearServerState(name),this.callParent(arguments)},readMyStates:function(){var states=myStates,param={};return param.sessiontoken=GlobalFun.getSeesionToken(),param.key=Ext.JSON.encode(stateSorArr),WsCall.call("readmystates",param,function(response,opts){var datas=Ext.JSON.decode(response.data);Ext.Array.each(datas,function(val,index,alls){var tmpKey=stateSorArr[index];val.stateSaved=!0,myStates[tmpKey]=val})},function(response,opts){},!1,null,null,null,!1),states},setServerState:function(name,value){value.stateSaved=!1;for(key in stateSorArr){var ssArr=stateSorArr[key];if(ssArr==name){var curState=myStates[ssArr],tmpAr=[];curState&&value.columns&&curState.columns&&(Ext.Array.each(value.columns,function(item){var hasP=!1;Ext.Array.each(curState.columns,function(it){it.id==item.id&&(item.HasV=!0,hasP=!0,it=Ext.Object.merge(it,item))}),hasP&&tmpAr.push(item)}),Ext.Array.each(value.columns,function(it){it.HasV||tmpAr.push(it)}),curState.columns=tmpAr,value.columns=curState.columns),curState=value,setSerStates.cancel(),setSerStates.delay(6e3,function(){for(key1 in stateSorArr){var tmp=myStates[stateSorArr[key1]];if(tmp&&!tmp.stateSaved){var tmpStr=Ext.JSON.encode(tmp);if("{}"!=tmpStr){var param={};param.sessiontoken=GlobalFun.getSeesionToken(),param.key=stateSorArr[key1],param.value=tmpStr,tmp.stateSaved=!0,WsCall.call("setmystates",param,function(response,opts){},function(response,opts){},!1)}}}});break}}},clearServerState:function(name){}});
//# sourceMappingURL=MyStateProvider.js.map