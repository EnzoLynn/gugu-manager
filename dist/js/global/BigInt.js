function setMaxDigits(value){maxDigits=value,ZERO_ARRAY=new Array(maxDigits);for(var iza=0;iza<ZERO_ARRAY.length;iza++)ZERO_ARRAY[iza]=0;bigZero=new BigInt,bigOne=new BigInt,bigOne.digits[0]=1}function BigInt(flag){"boolean"==typeof flag&&1==flag?this.digits=null:this.digits=ZERO_ARRAY.slice(0),this.isNeg=!1}function biFromDecimal(s){for(var result,isNeg="-"==s.charAt(0),i=isNeg?1:0;i<s.length&&"0"==s.charAt(i);)++i;if(i==s.length)result=new BigInt;else{var digitCount=s.length-i,fgl=digitCount%dpl10;for(0==fgl&&(fgl=dpl10),result=biFromNumber(Number(s.substr(i,fgl))),i+=fgl;i<s.length;)result=biAdd(biMultiply(result,lr10),biFromNumber(Number(s.substr(i,dpl10)))),i+=dpl10;result.isNeg=isNeg}return result}function biCopy(bi){var result=new BigInt(!0);return result.digits=bi.digits.slice(0),result.isNeg=bi.isNeg,result}function biFromNumber(i){var result=new BigInt;result.isNeg=0>i,i=Math.abs(i);for(var j=0;i>0;)result.digits[j++]=i&maxDigitVal,i>>=biRadixBits;return result}function reverseStr(s){for(var result="",i=s.length-1;i>-1;--i)result+=s.charAt(i);return result}function biToString(x,radix){var b=new BigInt;b.digits[0]=radix;for(var qr=biDivideModulo(x,b),result=hexatrigesimalToChar[qr[1].digits[0]];1==biCompare(qr[0],bigZero);)qr=biDivideModulo(qr[0],b),digit=qr[1].digits[0],result+=hexatrigesimalToChar[qr[1].digits[0]];return(x.isNeg?"-":"")+reverseStr(result)}function biToDecimal(x){var b=new BigInt;b.digits[0]=10;for(var qr=biDivideModulo(x,b),result=String(qr[1].digits[0]);1==biCompare(qr[0],bigZero);)qr=biDivideModulo(qr[0],b),result+=String(qr[1].digits[0]);return(x.isNeg?"-":"")+reverseStr(result)}function digitToHex(n){var mask=15,result="";for(i=0;i<4;++i)result+=hexToChar[n&mask],n>>>=4;return reverseStr(result)}function biToHex(x){for(var result="",i=(biHighIndex(x),biHighIndex(x));i>-1;--i)result+=digitToHex(x.digits[i]);return result}function charToHex(c){var result,ZERO=48,NINE=ZERO+9,littleA=97,littleZ=littleA+25,bigA=65,bigZ=90;return result=c>=ZERO&&NINE>=c?c-ZERO:c>=bigA&&bigZ>=c?10+c-bigA:c>=littleA&&littleZ>=c?10+c-littleA:0}function hexToDigit(s){for(var result=0,sl=Math.min(s.length,4),i=0;sl>i;++i)result<<=4,result|=charToHex(s.charCodeAt(i));return result}function biFromHex(s){for(var result=new BigInt,sl=s.length,i=sl,j=0;i>0;i-=4,++j)result.digits[j]=hexToDigit(s.substr(Math.max(i-4,0),Math.min(i,4)));return result}function biFromString(s,radix){var isNeg="-"==s.charAt(0),istop=isNeg?1:0,result=new BigInt,place=new BigInt;place.digits[0]=1;for(var i=s.length-1;i>=istop;i--){var c=s.charCodeAt(i),digit=charToHex(c),biDigit=biMultiplyDigit(place,digit);result=biAdd(result,biDigit),place=biMultiplyDigit(place,radix)}return result.isNeg=isNeg,result}function biDump(b){return(b.isNeg?"-":"")+b.digits.join(" ")}function biAdd(x,y){var result;if(x.isNeg!=y.isNeg)y.isNeg=!y.isNeg,result=biSubtract(x,y),y.isNeg=!y.isNeg;else{result=new BigInt;for(var n,c=0,i=0;i<x.digits.length;++i)n=x.digits[i]+y.digits[i]+c,result.digits[i]=65535&n,c=Number(n>=biRadix);result.isNeg=x.isNeg}return result}function biSubtract(x,y){var result;if(x.isNeg!=y.isNeg)y.isNeg=!y.isNeg,result=biAdd(x,y),y.isNeg=!y.isNeg;else{result=new BigInt;var n,c;c=0;for(var i=0;i<x.digits.length;++i)n=x.digits[i]-y.digits[i]+c,result.digits[i]=65535&n,result.digits[i]<0&&(result.digits[i]+=biRadix),c=0-Number(0>n);if(-1==c){c=0;for(var i=0;i<x.digits.length;++i)n=0-result.digits[i]+c,result.digits[i]=65535&n,result.digits[i]<0&&(result.digits[i]+=biRadix),c=0-Number(0>n);result.isNeg=!x.isNeg}else result.isNeg=x.isNeg}return result}function biHighIndex(x){for(var result=x.digits.length-1;result>0&&0==x.digits[result];)--result;return result}function biNumBits(x){var result,n=biHighIndex(x),d=x.digits[n],m=(n+1)*bitsPerDigit;for(result=m;result>m-bitsPerDigit&&0==(32768&d);--result)d<<=1;return result}function biMultiply(x,y){for(var c,uv,k,result=new BigInt,n=biHighIndex(x),t=biHighIndex(y),i=0;t>=i;++i){for(c=0,k=i,j=0;j<=n;++j,++k)uv=result.digits[k]+x.digits[j]*y.digits[i]+c,result.digits[k]=uv&maxDigitVal,c=uv>>>biRadixBits;result.digits[i+n+1]=c}return result.isNeg=x.isNeg!=y.isNeg,result}function biMultiplyDigit(x,y){var n,c,uv;result=new BigInt,n=biHighIndex(x),c=0;for(var j=0;n>=j;++j)uv=result.digits[j]+x.digits[j]*y+c,result.digits[j]=uv&maxDigitVal,c=uv>>>biRadixBits;return result.digits[1+n]=c,result}function arrayCopy(src,srcStart,dest,destStart,n){for(var m=Math.min(srcStart+n,src.length),i=srcStart,j=destStart;m>i;++i,++j)dest[j]=src[i]}function biShiftLeft(x,n){var digitCount=Math.floor(n/bitsPerDigit),result=new BigInt;arrayCopy(x.digits,0,result.digits,digitCount,result.digits.length-digitCount);for(var bits=n%bitsPerDigit,rightBits=bitsPerDigit-bits,i=result.digits.length-1,i1=i-1;i>0;--i,--i1)result.digits[i]=result.digits[i]<<bits&maxDigitVal|(result.digits[i1]&highBitMasks[bits])>>>rightBits;return result.digits[0]=result.digits[i]<<bits&maxDigitVal,result.isNeg=x.isNeg,result}function biShiftRight(x,n){var digitCount=Math.floor(n/bitsPerDigit),result=new BigInt;arrayCopy(x.digits,digitCount,result.digits,0,x.digits.length-digitCount);for(var bits=n%bitsPerDigit,leftBits=bitsPerDigit-bits,i=0,i1=i+1;i<result.digits.length-1;++i,++i1)result.digits[i]=result.digits[i]>>>bits|(result.digits[i1]&lowBitMasks[bits])<<leftBits;return result.digits[result.digits.length-1]>>>=bits,result.isNeg=x.isNeg,result}function biMultiplyByRadixPower(x,n){var result=new BigInt;return arrayCopy(x.digits,0,result.digits,n,result.digits.length-n),result}function biDivideByRadixPower(x,n){var result=new BigInt;return arrayCopy(x.digits,n,result.digits,0,result.digits.length-n),result}function biModuloByRadixPower(x,n){var result=new BigInt;return arrayCopy(x.digits,0,result.digits,0,n),result}function biCompare(x,y){if(x.isNeg!=y.isNeg)return 1-2*Number(x.isNeg);for(var i=x.digits.length-1;i>=0;--i)if(x.digits[i]!=y.digits[i])return x.isNeg?1-2*Number(x.digits[i]>y.digits[i]):1-2*Number(x.digits[i]<y.digits[i]);return 0}function biDivideModulo(x,y){var q,r,nb=biNumBits(x),tb=biNumBits(y),origYIsNeg=y.isNeg;if(tb>nb)return x.isNeg?(q=biCopy(bigOne),q.isNeg=!y.isNeg,x.isNeg=!1,y.isNeg=!1,r=biSubtract(y,x),x.isNeg=!0,y.isNeg=origYIsNeg):(q=new BigInt,r=biCopy(x)),new Array(q,r);q=new BigInt,r=x;for(var t=Math.ceil(tb/bitsPerDigit)-1,lambda=0;y.digits[t]<biHalfRadix;)y=biShiftLeft(y,1),++lambda,++tb,t=Math.ceil(tb/bitsPerDigit)-1;r=biShiftLeft(r,lambda),nb+=lambda;for(var n=Math.ceil(nb/bitsPerDigit)-1,b=biMultiplyByRadixPower(y,n-t);-1!=biCompare(r,b);)++q.digits[n-t],r=biSubtract(r,b);for(var i=n;i>t;--i){var ri=i>=r.digits.length?0:r.digits[i],ri1=i-1>=r.digits.length?0:r.digits[i-1],ri2=i-2>=r.digits.length?0:r.digits[i-2],yt=t>=y.digits.length?0:y.digits[t],yt1=t-1>=y.digits.length?0:y.digits[t-1];ri==yt?q.digits[i-t-1]=maxDigitVal:q.digits[i-t-1]=Math.floor((ri*biRadix+ri1)/yt);for(var c1=q.digits[i-t-1]*(yt*biRadix+yt1),c2=ri*biRadixSquared+(ri1*biRadix+ri2);c1>c2;)--q.digits[i-t-1],c1=q.digits[i-t-1]*(yt*biRadix|yt1),c2=ri*biRadix*biRadix+(ri1*biRadix+ri2);b=biMultiplyByRadixPower(y,i-t-1),r=biSubtract(r,biMultiplyDigit(b,q.digits[i-t-1])),r.isNeg&&(r=biAdd(r,b),--q.digits[i-t-1])}return r=biShiftRight(r,lambda),q.isNeg=x.isNeg!=origYIsNeg,x.isNeg&&(q=origYIsNeg?biAdd(q,bigOne):biSubtract(q,bigOne),y=biShiftRight(y,lambda),r=biSubtract(y,r)),0==r.digits[0]&&0==biHighIndex(r)&&(r.isNeg=!1),new Array(q,r)}function biDivide(x,y){return biDivideModulo(x,y)[0]}function biModulo(x,y){return biDivideModulo(x,y)[1]}function biMultiplyMod(x,y,m){return biModulo(biMultiply(x,y),m)}function biPow(x,y){for(var result=bigOne,a=x;;){if(0!=(1&y)&&(result=biMultiply(result,a)),y>>=1,0==y)break;a=biMultiply(a,a)}return result}function biPowMod(x,y,m){for(var result=bigOne,a=x,k=y;;){if(0!=(1&k.digits[0])&&(result=biMultiplyMod(result,a,m)),k=biShiftRight(k,1),0==k.digits[0]&&0==biHighIndex(k))break;a=biMultiplyMod(a,a,m)}return result}var biRadixBase=2,biRadixBits=16,bitsPerDigit=biRadixBits,biRadix=65536,biHalfRadix=biRadix>>>1,biRadixSquared=biRadix*biRadix,maxDigitVal=biRadix-1,maxInteger=9999999999999998,maxDigits,ZERO_ARRAY,bigZero,bigOne;setMaxDigits(20);var dpl10=15,lr10=biFromNumber(1e15),hexatrigesimalToChar=new Array("0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"),hexToChar=new Array("0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"),highBitMasks=new Array(0,32768,49152,57344,61440,63488,64512,65024,65280,65408,65472,65504,65520,65528,65532,65534,65535),lowBitMasks=new Array(0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535);
//# sourceMappingURL=BigInt.js.map